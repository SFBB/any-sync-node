// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: nodesync/nodesyncproto/protos/nodesync.proto

package nodesyncproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrCodes int32

const (
	ErrCodes_Unexpected          ErrCodes = 0
	ErrCodes_ExpectedCoordinator ErrCodes = 1
	ErrCodes_UnsupportedStorage  ErrCodes = 2
	ErrCodes_ErrorOffset         ErrCodes = 1000
)

// Enum value maps for ErrCodes.
var (
	ErrCodes_name = map[int32]string{
		0:    "Unexpected",
		1:    "ExpectedCoordinator",
		2:    "UnsupportedStorage",
		1000: "ErrorOffset",
	}
	ErrCodes_value = map[string]int32{
		"Unexpected":          0,
		"ExpectedCoordinator": 1,
		"UnsupportedStorage":  2,
		"ErrorOffset":         1000,
	}
)

func (x ErrCodes) Enum() *ErrCodes {
	p := new(ErrCodes)
	*p = x
	return p
}

func (x ErrCodes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCodes) Descriptor() protoreflect.EnumDescriptor {
	return file_nodesync_nodesyncproto_protos_nodesync_proto_enumTypes[0].Descriptor()
}

func (ErrCodes) Type() protoreflect.EnumType {
	return &file_nodesync_nodesyncproto_protos_nodesync_proto_enumTypes[0]
}

func (x ErrCodes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCodes.Descriptor instead.
func (ErrCodes) EnumDescriptor() ([]byte, []int) {
	return file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescGZIP(), []int{0}
}

type ColdSyncProtocolType int32

const (
	ColdSyncProtocolType_Pogreb         ColdSyncProtocolType = 0
	ColdSyncProtocolType_AnystoreSqlite ColdSyncProtocolType = 1
)

// Enum value maps for ColdSyncProtocolType.
var (
	ColdSyncProtocolType_name = map[int32]string{
		0: "Pogreb",
		1: "AnystoreSqlite",
	}
	ColdSyncProtocolType_value = map[string]int32{
		"Pogreb":         0,
		"AnystoreSqlite": 1,
	}
)

func (x ColdSyncProtocolType) Enum() *ColdSyncProtocolType {
	p := new(ColdSyncProtocolType)
	*p = x
	return p
}

func (x ColdSyncProtocolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColdSyncProtocolType) Descriptor() protoreflect.EnumDescriptor {
	return file_nodesync_nodesyncproto_protos_nodesync_proto_enumTypes[1].Descriptor()
}

func (ColdSyncProtocolType) Type() protoreflect.EnumType {
	return &file_nodesync_nodesyncproto_protos_nodesync_proto_enumTypes[1]
}

func (x ColdSyncProtocolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ColdSyncProtocolType.Descriptor instead.
func (ColdSyncProtocolType) EnumDescriptor() ([]byte, []int) {
	return file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescGZIP(), []int{1}
}

// PartitionSyncRange presenting a request for one range
type PartitionSyncRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          uint64                 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To            uint64                 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Limit         uint32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Elements      bool                   `protobuf:"varint,4,opt,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionSyncRange) Reset() {
	*x = PartitionSyncRange{}
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionSyncRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionSyncRange) ProtoMessage() {}

func (x *PartitionSyncRange) ProtoReflect() protoreflect.Message {
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionSyncRange.ProtoReflect.Descriptor instead.
func (*PartitionSyncRange) Descriptor() ([]byte, []int) {
	return file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescGZIP(), []int{0}
}

func (x *PartitionSyncRange) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *PartitionSyncRange) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *PartitionSyncRange) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PartitionSyncRange) GetElements() bool {
	if x != nil {
		return x.Elements
	}
	return false
}

// PartitionSyncResult presenting a response for one range
type PartitionSyncResult struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Hash          []byte                        `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Elements      []*PartitionSyncResultElement `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
	Count         uint32                        `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionSyncResult) Reset() {
	*x = PartitionSyncResult{}
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionSyncResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionSyncResult) ProtoMessage() {}

func (x *PartitionSyncResult) ProtoReflect() protoreflect.Message {
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionSyncResult.ProtoReflect.Descriptor instead.
func (*PartitionSyncResult) Descriptor() ([]byte, []int) {
	return file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescGZIP(), []int{1}
}

func (x *PartitionSyncResult) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *PartitionSyncResult) GetElements() []*PartitionSyncResultElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *PartitionSyncResult) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// PartitionSyncResultElement presenting state of one object
type PartitionSyncResultElement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Head          string                 `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionSyncResultElement) Reset() {
	*x = PartitionSyncResultElement{}
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionSyncResultElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionSyncResultElement) ProtoMessage() {}

func (x *PartitionSyncResultElement) ProtoReflect() protoreflect.Message {
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionSyncResultElement.ProtoReflect.Descriptor instead.
func (*PartitionSyncResultElement) Descriptor() ([]byte, []int) {
	return file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescGZIP(), []int{2}
}

func (x *PartitionSyncResultElement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PartitionSyncResultElement) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

// HeadSyncRequest is a request for HeadSync
type PartitionSyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartitionId   uint64                 `protobuf:"varint,1,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
	Ranges        []*PartitionSyncRange  `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionSyncRequest) Reset() {
	*x = PartitionSyncRequest{}
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionSyncRequest) ProtoMessage() {}

func (x *PartitionSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionSyncRequest.ProtoReflect.Descriptor instead.
func (*PartitionSyncRequest) Descriptor() ([]byte, []int) {
	return file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescGZIP(), []int{3}
}

func (x *PartitionSyncRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *PartitionSyncRequest) GetRanges() []*PartitionSyncRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

// PartitionSyncResponse is a response for HeadSync
type PartitionSyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*PartitionSyncResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionSyncResponse) Reset() {
	*x = PartitionSyncResponse{}
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionSyncResponse) ProtoMessage() {}

func (x *PartitionSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionSyncResponse.ProtoReflect.Descriptor instead.
func (*PartitionSyncResponse) Descriptor() ([]byte, []int) {
	return file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescGZIP(), []int{4}
}

func (x *PartitionSyncResponse) GetResults() []*PartitionSyncResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type ColdSyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	ProtocolType  ColdSyncProtocolType   `protobuf:"varint,2,opt,name=protocolType,proto3,enum=anyNodeSync.ColdSyncProtocolType" json:"protocolType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColdSyncRequest) Reset() {
	*x = ColdSyncRequest{}
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColdSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColdSyncRequest) ProtoMessage() {}

func (x *ColdSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColdSyncRequest.ProtoReflect.Descriptor instead.
func (*ColdSyncRequest) Descriptor() ([]byte, []int) {
	return file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescGZIP(), []int{5}
}

func (x *ColdSyncRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ColdSyncRequest) GetProtocolType() ColdSyncProtocolType {
	if x != nil {
		return x.ProtocolType
	}
	return ColdSyncProtocolType_Pogreb
}

type ColdSyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Crc32         uint32                 `protobuf:"varint,4,opt,name=crc32,proto3" json:"crc32,omitempty"`
	ProtocolType  ColdSyncProtocolType   `protobuf:"varint,5,opt,name=protocolType,proto3,enum=anyNodeSync.ColdSyncProtocolType" json:"protocolType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColdSyncResponse) Reset() {
	*x = ColdSyncResponse{}
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColdSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColdSyncResponse) ProtoMessage() {}

func (x *ColdSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColdSyncResponse.ProtoReflect.Descriptor instead.
func (*ColdSyncResponse) Descriptor() ([]byte, []int) {
	return file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescGZIP(), []int{6}
}

func (x *ColdSyncResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ColdSyncResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ColdSyncResponse) GetCrc32() uint32 {
	if x != nil {
		return x.Crc32
	}
	return 0
}

func (x *ColdSyncResponse) GetProtocolType() ColdSyncProtocolType {
	if x != nil {
		return x.ProtocolType
	}
	return ColdSyncProtocolType_Pogreb
}

var File_nodesync_nodesyncproto_protos_nodesync_proto protoreflect.FileDescriptor

var file_nodesync_nodesyncproto_protos_nodesync_proto_rawDesc = string([]byte{
	0x0a, 0x2c, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x79, 0x6e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x61, 0x6e, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x22, 0x6a, 0x0a, 0x12, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x43, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x40,
	0x0a, 0x1a, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x22, 0x71, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6e, 0x79,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x6e, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x72, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x64,
	0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x6e,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x43, 0x6f, 0x6c, 0x64, 0x53, 0x79,
	0x6e, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9f, 0x01, 0x0a,
	0x10, 0x43, 0x6f, 0x6c, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x72, 0x63, 0x33, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x72, 0x63, 0x33, 0x32, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x61, 0x6e, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x43, 0x6f, 0x6c, 0x64,
	0x53, 0x79, 0x6e, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x5d,
	0x0a, 0x08, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x6e,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0b, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x10, 0xe8, 0x07, 0x2a, 0x36, 0x0a,
	0x14, 0x43, 0x6f, 0x6c, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x6f, 0x67, 0x72, 0x65, 0x62, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x6e, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x71, 0x6c,
	0x69, 0x74, 0x65, 0x10, 0x01, 0x32, 0xad, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x56, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x21, 0x2e, 0x61, 0x6e, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79, 0x6e,
	0x63, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x6e, 0x79, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x79, 0x6e, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x43, 0x6f,
	0x6c, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1c, 0x2e, 0x61, 0x6e, 0x79, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x79, 0x6e, 0x63, 0x2e, 0x43, 0x6f, 0x6c, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79,
	0x6e, 0x63, 0x2e, 0x43, 0x6f, 0x6c, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x18, 0x5a, 0x16, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x79, 0x6e,
	0x63, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescOnce sync.Once
	file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescData []byte
)

func file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescGZIP() []byte {
	file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescOnce.Do(func() {
		file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nodesync_nodesyncproto_protos_nodesync_proto_rawDesc), len(file_nodesync_nodesyncproto_protos_nodesync_proto_rawDesc)))
	})
	return file_nodesync_nodesyncproto_protos_nodesync_proto_rawDescData
}

var file_nodesync_nodesyncproto_protos_nodesync_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_nodesync_nodesyncproto_protos_nodesync_proto_goTypes = []any{
	(ErrCodes)(0),                      // 0: anyNodeSync.ErrCodes
	(ColdSyncProtocolType)(0),          // 1: anyNodeSync.ColdSyncProtocolType
	(*PartitionSyncRange)(nil),         // 2: anyNodeSync.PartitionSyncRange
	(*PartitionSyncResult)(nil),        // 3: anyNodeSync.PartitionSyncResult
	(*PartitionSyncResultElement)(nil), // 4: anyNodeSync.PartitionSyncResultElement
	(*PartitionSyncRequest)(nil),       // 5: anyNodeSync.PartitionSyncRequest
	(*PartitionSyncResponse)(nil),      // 6: anyNodeSync.PartitionSyncResponse
	(*ColdSyncRequest)(nil),            // 7: anyNodeSync.ColdSyncRequest
	(*ColdSyncResponse)(nil),           // 8: anyNodeSync.ColdSyncResponse
}
var file_nodesync_nodesyncproto_protos_nodesync_proto_depIdxs = []int32{
	4, // 0: anyNodeSync.PartitionSyncResult.elements:type_name -> anyNodeSync.PartitionSyncResultElement
	2, // 1: anyNodeSync.PartitionSyncRequest.ranges:type_name -> anyNodeSync.PartitionSyncRange
	3, // 2: anyNodeSync.PartitionSyncResponse.results:type_name -> anyNodeSync.PartitionSyncResult
	1, // 3: anyNodeSync.ColdSyncRequest.protocolType:type_name -> anyNodeSync.ColdSyncProtocolType
	1, // 4: anyNodeSync.ColdSyncResponse.protocolType:type_name -> anyNodeSync.ColdSyncProtocolType
	5, // 5: anyNodeSync.NodeSync.PartitionSync:input_type -> anyNodeSync.PartitionSyncRequest
	7, // 6: anyNodeSync.NodeSync.ColdSync:input_type -> anyNodeSync.ColdSyncRequest
	6, // 7: anyNodeSync.NodeSync.PartitionSync:output_type -> anyNodeSync.PartitionSyncResponse
	8, // 8: anyNodeSync.NodeSync.ColdSync:output_type -> anyNodeSync.ColdSyncResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_nodesync_nodesyncproto_protos_nodesync_proto_init() }
func file_nodesync_nodesyncproto_protos_nodesync_proto_init() {
	if File_nodesync_nodesyncproto_protos_nodesync_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nodesync_nodesyncproto_protos_nodesync_proto_rawDesc), len(file_nodesync_nodesyncproto_protos_nodesync_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nodesync_nodesyncproto_protos_nodesync_proto_goTypes,
		DependencyIndexes: file_nodesync_nodesyncproto_protos_nodesync_proto_depIdxs,
		EnumInfos:         file_nodesync_nodesyncproto_protos_nodesync_proto_enumTypes,
		MessageInfos:      file_nodesync_nodesyncproto_protos_nodesync_proto_msgTypes,
	}.Build()
	File_nodesync_nodesyncproto_protos_nodesync_proto = out.File
	file_nodesync_nodesyncproto_protos_nodesync_proto_goTypes = nil
	file_nodesync_nodesyncproto_protos_nodesync_proto_depIdxs = nil
}
